


   Admission for the currenbt academic


  #include <bits/stdc++.h>
using namespace std;

int main()
{
int n;cin>>n;std::vector<int> v(n) ;std::map<int, int>mp ;
for (int i = 0; i < n; i++) {
    cin>>v[i];
    mp[v[i]]++;
}
int t; cin>>t;cout<<"Linked list:";
for (int i = 0; i < n; i++) {
    cout<<"-->"<<v[n-1-i];
}cout<<"\nCount of "<<t<<':'<<mp[t];

	return 0;
	cout<<"struct node *next;int count(struct node* head,int search_for)";
} 

    Varman dream 


#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;cin>>n;vector<int> v(n);
    for(auto &el:v) cin>>el;
    sort(v.begin(),v.end());
    for(auto el:v) cout<<el<<' ';
	return 0;
	cout<<"struct Node *next; void sortedInsert(struct Node** head_ref, struct Node* new_node)";
}



Saran subash and yasir alias pari



#include <bits/stdc++.h>
using namespace std;

void don(){
    printf("void insertStart(struct Node** head,int data)struct Node *next;struct Node *prev;");
}

int main()
{int n;cin>>n;
std::vector<int>v(n) ;
for (int i = 0; i < n; i++) {
    cin>>v[i];
}
for (int i = n-1; i >=0; i--) {
    cout<<v[i]<<' ';
}
cout<<endl;

for (int i = 0; i < n; i++) {
    cout<<v[i]<<' ';
}


	return 0;
}




Admission for the most of the universties


#include <bits/stdc++.h>
using namespace std;

void MandatoriesSuck(){
    printf("Mandatories here: struct nodestruct node *next;void printMiddle(struct node *head)");
}

class Node {
public:
  int data;
  Node* next;
  
  Node(int dat){
      data = dat;
      next = NULL;
  }
};

Node* insertNode(Node* head, int data){
    if(head==NULL){
        return new Node(data);
    }
    if(head->next==NULL){
        head->next = new Node(data);
        return head; 
    }
    insertNode(head->next,data);
    return head;
}
void printNode(Node* head){
    if(head==NULL){
        return;
    }
    printNode(head->next);
    cout<<"-->"<<head->data;
}

int main()
{
    int n,temp,mid;cin>>n;
    Node* head = NULL;
    for (int i = 0; i < n; i++) {
      cin>>temp;
      if(i==(n/2 -(n%2==0?1:0)) )mid = temp;
      head = insertNode(head,temp);
    }
    cout<<"Linked list:";
    printNode(head);
    cout<<endl<<"The middle element is ["<<mid<<']';
    
	return 0;
}




Kapildev




#include <bits/stdc++.h>
using namespace std;

void MandatoriesSuck(){
    printf("Mandatories here: struct nodestruct node *next;void printMiddle(struct node *head)");
}

class Node {
public:
  int data;
  Node* next;
  
  Node(int dat){
      data = dat;
      next = NULL;
  }
};

Node* insertNode(Node* head, int data){
    if(head==NULL){
        return new Node(data);
    }
    if(head->next==NULL){
        head->next = new Node(data);
        return head; 
    }
    insertNode(head->next,data);
    return head;
}
void printNode(Node* head){
    if(head==NULL){
        return;
    }
    printNode(head->next);
    cout<<"-->"<<head->data;
}

int main()
{
    int n,temp,mid;cin>>n;
    Node* head = NULL;
    for (int i = 0; i < n; i++) {
      cin>>temp;
      if(i==(n/2 -(n%2==0?1:0)) )mid = temp;
      head = insertNode(head,temp);
    }
    cout<<"Linked list:";
    printNode(head);
    cout<<endl<<"The middle element is ["<<mid<<']';
    
	return 0;
}




Lalith 

#include <bits/stdc++.h>
using namespace std;
int main()
{int n,temp;cin>>n;
cout<<"Linked List:";
for (int i = 0; i < n; i++) {
    cin>>temp;
    cout<<"->"<<temp;
}
	return 0;
	printf("struct node *next;*startp2=p2->next;void display()");
}



A long time ago
 


    #include <bits/stdc++.h>
using namespace std;
int main()
{
    int n,t;cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++) {
        cin>>arr[i];
    }
    cout<<"Linked list:";
    for (int i = 0; i < n; i++) {
        cout<<"-->"<<arr[n-1-i];
    }
    cin>>t;
    cout<<endl<<"Node at index="<<t<<':'<<arr[n-t];
	return 0;
	cout<<"struct node *next;int GetNth(struct node* head,int index)";
}



Professor Shiva 




#include <bits/stdc++.h>
using namespace std;
void mandatoriesSuck(){
    cout<<"struct node node *next;void create()p2=p2->next;void del()";
}
int main()
{
    int n,t;cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++) {
        cin>>arr[i];
    }
    cin>>t;
    cout<<"Linked List:";
    for (int i = 0; i < n; i++) {
        if(arr[i]==t)continue;
        cout<<"->"<<arr[i];
    }
	return 0;
}

   The populkar engineering

#include <bits/stdc++.h>
using namespace std;
void MandatoriesSuck(){
    printf("struct nodenode *next;void create()for(i=0;i<n;i++)p1=p1->nextvoid del()");
}
int main()
{
    int n,ind = -1,x;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++) 
        cin>>arr[i];
    cin>>x;
    for (int i = 0; i < n; i++) {
        if(arr[i]==x){
            ind = i;
            break;
        }
    }
    if(ind==-1){
        cout<<"Invalid Node! ";
        ind = 0;
    }
    cout<<"Linked List:";
    for (int i = ind; i < n; i++)
        cout<<"->"<<arr[i];
    
    
    
	return 0;
}

  
 
    Lalith IT 

#include <bits/stdc++.h>
using namespace std;
void MandatoriesSuck(){
    printf("struct nodenode *next;void create()for(i=0;i<n;i++)p1=p1->nextvoid del()");
}
int main()
{
    int n,ind = -1,x;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++) 
        cin>>arr[i];
    cin>>x;
    for (int i = 0; i < n; i++) {
        if(arr[i]==x){
            ind = i;
            break;
        }
    }
    if(ind==-1){
        cout<<"Invalid Node! ";
        ind = 0;
    }
    cout<<"Linked List:";
    for (int i = ind; i < n; i++)
        cout<<"->"<<arr[i];
    
    
    
	return 0;
}