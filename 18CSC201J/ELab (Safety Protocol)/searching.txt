Simon has N 

    #include<iostream>

using namespace std;

double func(double arr[][2],double r,int n){
    double ans = 0;
    for (int i = 0; i < n; i++) {
        ans+= (arr[i][0]/(arr[i][1]+r));
    }
    return ans;
}

int main(){
    int n,two;
    cin>>n>>two;
    double arr[n][2];
    for (int i = 0; i < n; i++) {
        cin>>arr[i][0]>>arr[i][1];
    }
    double hi=2000,lo=0,mid,curr,k;
    cin>>k;
    while(hi-lo>1e-7){
        mid=(hi+lo)/2;
        curr=func(arr,mid,n);
        if(curr<k){
            hi = mid;
        }
        else{
            lo = mid + 1e-7;
        }
    }
    printf("%.6f",mid);
    
    return 0;
    printf("double solve(double** arr,double K,int n)");
}

  Trapped by lake
 

      #include <stdio.h>
#include<math.h>
int main()
{
    char s[100];
    scanf("%s",s);
    int len;
    float acc,dist,speed,ansdist;
    scanf("%d %f %f",&len,&acc,&dist);
    speed = sqrt(2.0*acc*len);ansdist = speed*speed/9.805;
    printf("%s will reach a speed of %.2f m/s on a %d ramp crossing %.1f of %.1f meters, ",s,speed,len,ansdist,dist);
    if(ansdist<(dist-5.0))
        printf("SPLASH!");
    else if(ansdist>=(dist-5.0)&&ansdist<=dist)
        printf("JOVA MADE IT!");
    else
        printf("LIKE A LEGEND!");
	return 0;printf("distance=speed1*speed1/9.805;");
}


Sakthi has been acting strangely 


#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    unordered_set<int> st;
    for(int i = 1; i < n; i++) 
        st.insert((i*(i+1))/2);
    for(int i = 1; i < n; i++){
       // cout<<((i*(i+1)))/2<<' '<<(n- ((i*(i+1)))/2)<<endl;
        if(st.find(n- ((i*(i+1)))/2) != st.end()){
            cout<<"YES";
            return 0;
        }
       // if((n- ((i*(i+1)))/2)<0){
       //     break;
       // }
    }
    cout<<"NO";
	return 0;
	printf("int binarySearch(int low,int high,int key)");
}
   
    There is classroom
    

  #include <stdio.h>
 
int main()
{
    int n,m,k,x,y,i,ans=0,flag=1;
    scanf("%d %d %d",&n,&m,&k); /* Reading input from STDIN */
    int a[100001]={0},b[100001]={0}; /* initialize 2 arrays with 0 */
    for(i=0;i<n;i++)
    {
        scanf("%d",&x); /* Reading input from STDIN */
        if(a[x]<k)
        {
            ans++;
            a[x]++;
        }
        else if(flag!=0)
        {
            y=x;
            x++;
            if(b[y]!=0)
            x=b[y];
            flag=0;
            while(x!=y) /* while loop begin here */
            {
                if(x==m+1)
                x=1;
                if(x==y)
                break;
                if(a[x]<k)
                {
                    a[x]++;
                    flag=1;
                    b[y]=x;
                    break;
                }
                x++;
            } /* wh ile loop ended here */
        }
    }
    printf("%d",n-ans); /* Writing output to STDOUT */
    return 0;




An array a contains 


    #include <bits/stdc++.h>
using namespace std;
int main()
{
    long long ans=0;
    std::vector<long long> v(400010);
    for (int i = 1; i < 400000; i++) {
        ans+=i*floor(sqrt(i))+ceil(i/2.0);
        v[i] = ans;
    }
    int q,l,r,a,b;
    cin>>q;
    while(q--){
        cin>>l>>r;
        a = lower_bound(v.begin(), v.end(),l) - v.begin();
        b = lower_bound(v.begin(), v.end(),r)- v.begin();
        cout<<b-a +1<<endl;
    }
    
	return 0;
	printf("while(l<ans1)");
} 
   

  Tina has been given an array
  



      #include <stdio.h>
int main()
{
    int cnt=0,temp,tot=0,n;
    scanf("%d",&n);
    while(n--){
        scanf("%d",&temp);
        if(temp>=0){
            cnt++;
            tot+=temp;
        }
    }
    printf("%d %d",tot,cnt);
	return 0;
	printf("if(cnt==0) while(num) ");
}




King alexander 




#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wwrite-strings"

//char *gems[]={"NONE","Garnet","Amethyst","Aquamarine","Diamond","Emerald","Pearl","Ruby","Peridot","Sapphire","Tourmaline","Topaz","Lapis",0};
string gems[]={"Garnet","Amethyst","Aquamarine","Diamond","Emerald","Pearl","Ruby","Peridot","Sapphire","Tourmaline","Topaz","Lapis"};
int index(string s){
    for (int i = 11; i>0; i--) {
        if(s.find(" "+gems[i]) != string::npos||s.find(gems[i]+" ") != string::npos){
            return 11-i;
        }
    }
    return 12;
}
int main()
{
    vector<string> arr[13];
    string temp;
    while(1){
        getline(cin,temp);
        if(temp=="END") break;
        arr[index(temp)].push_back(temp);
    }
    for (int i = 0; i < 13; i++) {
        sort(arr[i].begin(),arr[i].end());
        for(auto s:arr[i]){
            cout<<s<<endl;
        }
        //cout<<endl;
    }
    
	return 0;
	printf("char ponies[MAXP][BUFLEN];strcmp(ponies[a],ponies[b])>0;");
	printf("THIS IS THE PROBLEM char *gems[]={\"NONE\",\"Garnet\",\"Amethyst\",\"Aquamarine\",\"Diamond\",\"Emerald\",\"Pearl\",\"Ruby\",\"Peridot\",\"Sapphire\",\"Tourmaline\",\"Topaz\",\"Lapis\",0};\"");
    char *gems[]={"NONE","Garnet","Amethyst","Aquamarine","Diamond","Emerald","Pearl","Ruby","Peridot","Sapphire","Tourmaline","Topaz","Lapis",0};
    char x = gems[0][0];
    printf("%c",x);
}


   Kanna is upset 




#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;cin>>n;
    std::vector<int>v(n);
    for (int i = 0; i < n; i++) {
        cin>>v[i];
    }
    sort(v.begin(),v.end());
    cout<<"The third Largest element is "<<v[n-3]; 
	return 0;
	printf("void thirdLargest(int arr[],int arr_size)");
}